"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const upload_1 = require("../helpers/upload");
const adminAuth_1 = require("../controllers/admin/adminAuth");
const adminManagement_1 = require("../controllers/admin/adminManagement");
const auth_1 = require("../controllers/auth");
const adminUserManagement_1 = require("../controllers/admin/adminUserManagement");
const adminMarketManagement_1 = require("../controllers/admin/adminMarketManagement");
const controllers_1 = require("../controllers");
const routes = (0, express_1.Router)();
routes.post('/admin/sector', adminManagement_1.postSector);
routes.get('/admin/sector', controllers_1.getSector);
routes.get('/admin/profession', controllers_1.getProfession);
routes.post('/admin/profession', adminManagement_1.postProfession);
routes.post('/admin/delete-sector', adminManagement_1.deleteSector);
routes.post('/admin/delete-profession', adminManagement_1.deleteProfession);
routes.post('/admin/update-profession', adminManagement_1.updateProfession);
routes.post('/admin/update-sector', adminManagement_1.updateSector);
routes.post('/admin/register', adminAuth_1.register);
routes.post('/admin/assign-role', adminAuth_1.assignRole);
routes.post('/admin/update-status', adminAuth_1.updateStatus);
routes.post('/admin/delete-admin', adminAuth_1.deleteAdmin);
routes.post('/admin/admin-role', adminAuth_1.userRoles);
// routes.post('/admin/update-status',  updateAdminStatus);
routes.post('/admin/update-online-status', adminAuth_1.updateAdminOnlineStatus);
routes.get('/admin/all-users', adminUserManagement_1.getAllUsers);
routes.get('/admin/all-admins', adminAuth_1.getAllAdmin);
routes.get('/admin/admin-details', adminAuth_1.getAdminDetails);
routes.get('/admin/all-invites', adminAuth_1.getInvite);
routes.get('/admin/get-invite', adminAuth_1.getUserInvite);
routes.post('/admin/send-otp', auth_1.sendOtp);
routes.post('/admin/change-password', auth_1.resetPassword);
routes.get('/admin/sort-user', adminUserManagement_1.sortUsers);
routes.get('/admin/sort-marketplace', adminMarketManagement_1.sortMarketPlace);
routes.post('/admin/update-marketplace', adminMarketManagement_1.updateMarketPlaceStatus);
routes.post('/admin/delete-marketplace', adminMarketManagement_1.deleteMarket);
routes.get('/admin/profile-details', adminUserManagement_1.userProfile);
routes.post('/admin/update-user', adminUserManagement_1.updateUserStatus);
routes.get('/admin/check-email', adminAuth_1.checkEmail);
routes.get('/admin/dashboard-summary', adminManagement_1.dashboardUserSummary);
routes.post('/admin/transaction-dashboard', adminManagement_1.getWalletTransaction);
routes.post('/admin/update-details', adminAuth_1.updateProfile);
routes.post('/admin/send-announcement', adminManagement_1.sendAnnoncement);
routes.post('/admin/send-verification', adminManagement_1.sendVerification);
routes.get('/admin/sort-verification-users', adminManagement_1.sortVerificationUsers);
routes.get('/admin/announcement', adminManagement_1.getAnnoncement);
routes.post('/admin/delete-announcement', adminManagement_1.deleteAnnoncement);
routes.post('/admin/send-invite', adminAuth_1.sendInvite);
routes.post('/admin/login', auth_1.adminLogin);
routes.post('/admin/reset-password', adminAuth_1.changePassword);
routes.post('/admin/delete-invite', adminAuth_1.deleteInvite);
routes.post('/admin/delete-record', adminUserManagement_1.deleteRecording);
routes.post('/admin/delete-user', adminUserManagement_1.deleteUser);
routes.post('/admin/update-invite', adminAuth_1.updateInvite);
routes.post('/admin/category', adminMarketManagement_1.createCategory);
routes.post("/admin/sector", adminManagement_1.postSector);
routes.post("/admin/profession", upload_1.uploads.single("image"), adminManagement_1.postProfession);
// routes.get("/admin/transaction-dashboard", getTransactionDashboard )
routes.get("/admin/all-tos", adminManagement_1.getTos);
routes.post("/admin/delete-tos", adminManagement_1.deleteTos);
routes.post("/admin/update-tos", adminManagement_1.updateTos);
routes.get("/admin/all-faq", adminManagement_1.getFaq);
routes.post("/admin/delete-faq", adminManagement_1.deleteFaq);
routes.post("/admin/update-faq", adminManagement_1.updateFaq);
routes.post("/admin/create-tos", adminManagement_1.createTos);
routes.post("/admin/create-faq", adminManagement_1.createFaq);
routes.get("/admin/all-disputes", adminUserManagement_1.getAllDisputes);
routes.get("/admin/single-dispute", adminUserManagement_1.getSingleDisputes);
routes.post("/admin/dispute", adminUserManagement_1.deleteDisputes);
routes.post("/admin/update-dispute", adminUserManagement_1.updateDisputeStatus);
routes.post("/admin/send-dispute-message", auth_1.sendDisputeMessage);
routes.get("/admin/jobs", adminUserManagement_1.getJobs);
routes.post("/admin/ticket-message", upload_1.uploads.array("image"), adminUserManagement_1.postTicketMessage);
routes.post("/admin/delete-ticket", adminUserManagement_1.deleteTicket);
routes.post("/admin/delete-ticket-message", adminUserManagement_1.deleteTicketMesaage);
routes.post("/admin/ticket", upload_1.uploads.array("image"), adminUserManagement_1.postTicket);
routes.post("/admin/update-ticket", upload_1.uploads.array("image"), adminUserManagement_1.updateTicket);
routes.get("/admin/all-ticket", adminUserManagement_1.getAllTicket);
routes.get("/admin/ticket", adminUserManagement_1.getUserTicket);
routes.get("/admin/ticket-message", adminUserManagement_1.getTicketMessage);
routes.get("/admin/all-topic", adminManagement_1.getTopic);
routes.get("/all-topic", adminManagement_1.getTopic);
routes.post("/admin/delete-topic", adminManagement_1.deleteTopic);
routes.post("/admin/update-topic", adminManagement_1.updateTopic);
routes.post("/admin/create-topic", adminManagement_1.postTopic);
exports.default = routes;
//# sourceMappingURL=admin.js.map